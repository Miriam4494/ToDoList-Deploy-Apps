{"ast":null,"code":"\n// import axios from 'axios';\n\n// const apiUrl = \"http://localhost:5144/tasks\";  // כתובת ה-API\n\n// // הוספת Interceptor לתפיסת שגיאות ורישום ללוג\n// axios.interceptors.response.use(\n//   response => response, // מחזיר את התגובה כרגיל אם אין שגיאה\n//   error => {\n//     console.error('API Error:', {\n//       message: error.message,\n//       status: error.response?.status,\n//       data: error.response?.data\n//     });\n//     return Promise.reject(error); // מחזיר את השגיאה לצורך טיפול מאוחר יותר\n//   }\n// );\n\n// export default {\n//   // שליפת כל המשימות\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get(`${apiUrl}`);\n//       return Array.isArray(result.data) ? result.data : [];\n//     } catch (error) {\n//       alert(\"Failed to load tasks.\");\n//       return [];\n//     }\n//   },\n\n//   // הוספת משימה חדשה\n//   addTask: async (name) => {\n//     console.log('Adding task:', name);\n//     try {\n//       const result = await axios.post(`${apiUrl}`, { Name: name, isComplete: false });\n//       return result.data; // מחזיר את המידע של המשימה שנוספה\n//     } catch (error) {\n//       alert(\"Failed to add task.\");\n//       return null; // במקרה של שגיאה, מחזיר null או משתנה אחר להודעה\n//     }\n//   },\n\n//   // עדכון סטטוס משימה\n//   setCompleted: async (id, isComplete) => {\n//     console.log('Updating task', { id, isComplete });\n//     try {\n//       const result = await axios.put(`${apiUrl}/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to update task.\");\n//       return null;\n//     }\n//   },\n\n//   // מחיקת משימה\n//   deleteTask: async (id) => {\n//     console.log('Deleting task:', id);\n//     try {\n//       const result = await axios.delete(`${apiUrl}/${id}`);\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to delete task.\");\n//       return null;\n//     }\n//   }\n// };","map":{"version":3,"names":[],"sources":["C:/מירי/תכנות/שנה ב/פרקטיקוד/ToDoListFullStack/ToDoListReact-master/src/service.js"],"sourcesContent":["\n// import axios from 'axios';\n\n// const apiUrl = \"http://localhost:5144/tasks\";  // כתובת ה-API\n\n// // הוספת Interceptor לתפיסת שגיאות ורישום ללוג\n// axios.interceptors.response.use(\n//   response => response, // מחזיר את התגובה כרגיל אם אין שגיאה\n//   error => {\n//     console.error('API Error:', {\n//       message: error.message,\n//       status: error.response?.status,\n//       data: error.response?.data\n//     });\n//     return Promise.reject(error); // מחזיר את השגיאה לצורך טיפול מאוחר יותר\n//   }\n// );\n\n// export default {\n//   // שליפת כל המשימות\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get(`${apiUrl}`);\n//       return Array.isArray(result.data) ? result.data : [];\n//     } catch (error) {\n//       alert(\"Failed to load tasks.\");\n//       return [];\n//     }\n//   },\n\n//   // הוספת משימה חדשה\n//   addTask: async (name) => {\n//     console.log('Adding task:', name);\n//     try {\n//       const result = await axios.post(`${apiUrl}`, { Name: name, isComplete: false });\n//       return result.data; // מחזיר את המידע של המשימה שנוספה\n//     } catch (error) {\n//       alert(\"Failed to add task.\");\n//       return null; // במקרה של שגיאה, מחזיר null או משתנה אחר להודעה\n//     }\n//   },\n\n//   // עדכון סטטוס משימה\n//   setCompleted: async (id, isComplete) => {\n//     console.log('Updating task', { id, isComplete });\n//     try {\n//       const result = await axios.put(`${apiUrl}/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to update task.\");\n//       return null;\n//     }\n//   },\n\n//   // מחיקת משימה\n//   deleteTask: async (id) => {\n//     console.log('Deleting task:', id);\n//     try {\n//       const result = await axios.delete(`${apiUrl}/${id}`);\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to delete task.\");\n//       return null;\n//     }\n//   }\n// };\n\n"],"mappings":";AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}