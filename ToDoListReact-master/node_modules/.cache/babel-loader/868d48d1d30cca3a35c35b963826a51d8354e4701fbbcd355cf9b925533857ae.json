{"ast":null,"code":"// import axios from 'axios';\n\n// const apiUrl = \"https://localhost:5144\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     //TODO\n//     return {};\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async()=>{\n//     console.log('deleteTask')\n//   }\n// };\n//******************************** */\n\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5144/tasks\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nimport axios from 'axios';\n\n// הגדרת baseURL באמצעות משתנה סביבה, מתאים לסביבות פיתוח ו-production\n// axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'https://localhost:5144';\n\n// // הוספת Interceptor לתפיסת שגיאות ורישום ללוג\n// axios.interceptors.response.use(\n//   response => response, // מחזיר את התגובה כרגיל אם אין שגיאה\n//   error => {\n//     console.error('API Error:', {\n//       message: error.message,\n//       status: error.response?.status,\n//       data: error.response?.data\n//     });\n//     return Promise.reject(error); // מחזיר את השגיאה לצורך טיפול מאוחר יותר\n//   }\n// );\n\nexport default {\n  // שליפת כל המשימות\n  getTasks: async () => {\n    try {\n      const result = await axios.get('/tasks');\n      // אם לא קיבלת תשובה ריקה, תחזיר את המידע\n      return Array.isArray(result.data) ? result.data : [];\n    } catch (error) {\n      // ניתן להוסיף טיפול בשגיאות, לדוגמה להחזיר מערך ריק\n      alert(\"Failed to load tasks.\");\n      return [];\n    }\n  },\n  // הוספת משימה חדשה\n  addTask: async name => {\n    console.log('Adding task:', name);\n    try {\n      const result = await axios.post('/tasks', {\n        Name: name,\n        isComplete: false\n      });\n      return result.data; // מחזיר את המידע של המשימה שנוספה\n    } catch (error) {\n      alert(\"Failed to add task.\");\n      return null; // במקרה של שגיאה, מחזיר null או משתנה אחר להודעה\n    }\n  },\n  // עדכון סטטוס משימה\n  setCompleted: async (id, isComplete) => {\n    console.log('Updating task', {\n      id,\n      isComplete\n    });\n    try {\n      const result = await axios.put(`/tasks/${id}`, {\n        isComplete\n      });\n      return result.data;\n    } catch (error) {\n      alert(\"Failed to update task.\");\n      return null;\n    }\n  },\n  // מחיקת משימה\n  deleteTask: async id => {\n    console.log('Deleting task:', id);\n    try {\n      const result = await axios.delete(`/tasks/${id}`);\n      return result.data;\n    } catch (error) {\n      alert(\"Failed to delete task.\");\n      return null;\n    }\n  }\n};\n\n// import axios from 'axios';\n\n// const apiClient = axios.create({\n//   baseURL: \"http://localhost:5144/tasks\",\n//   headers: {\n//     \"Content-Type\": \"application/json\"\n//   }\n// });\n\n// apiClient.interceptors.response.use(\n//   (response) => response,\n//   (error) => {\n//     console.error(\"API Error:\", error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// export default {\n//   getTasks: async () => {\n//     const result = await apiClient.get('/');\n//     return result.data;\n//   },\n\n//   addTask: async (name) => {\n//     const result = await apiClient.post(`/${name}`);\n//     return result.data;\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     const item = await apiClient.get(`/${id}`);\n//     item.data.isComplete = isComplete;\n//     const result = await apiClient.put(`/${id}`, item.data);\n//     return result.data;\n//   },\n\n//   deleteTask: async (id) => {\n//     const result = await apiClient.delete(`/${id}`);\n//     return result.data;\n//   }\n// };","map":{"version":3,"names":["apiClient","axios","create","baseURL","headers","getTasks","result","get","Array","isArray","data","error","alert","addTask","name","console","log","post","Name","isComplete","setCompleted","id","put","deleteTask","delete"],"sources":["C:/מירי/תכנות/שנה ב/פרקטיקוד/ToDoListFullStack/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n\n// const apiUrl = \"https://localhost:5144\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     //TODO\n//     return {};\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async()=>{\n//     console.log('deleteTask')\n//   }\n// };\n//******************************** */\n\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5144/tasks\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n\nimport axios from 'axios';\n\n// הגדרת baseURL באמצעות משתנה סביבה, מתאים לסביבות פיתוח ו-production\n// axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'https://localhost:5144';\n\n// // הוספת Interceptor לתפיסת שגיאות ורישום ללוג\n// axios.interceptors.response.use(\n//   response => response, // מחזיר את התגובה כרגיל אם אין שגיאה\n//   error => {\n//     console.error('API Error:', {\n//       message: error.message,\n//       status: error.response?.status,\n//       data: error.response?.data\n//     });\n//     return Promise.reject(error); // מחזיר את השגיאה לצורך טיפול מאוחר יותר\n//   }\n// );\n\nexport default {\n  // שליפת כל המשימות\n  getTasks: async () => {\n    try {\n      const result = await axios.get('/tasks');\n      // אם לא קיבלת תשובה ריקה, תחזיר את המידע\n      return Array.isArray(result.data) ? result.data : [];\n    } catch (error) {\n      // ניתן להוסיף טיפול בשגיאות, לדוגמה להחזיר מערך ריק\n      alert(\"Failed to load tasks.\");\n      return [];\n    }\n  },\n\n  // הוספת משימה חדשה\n  addTask: async (name) => {\n    console.log('Adding task:', name);\n    try {\n      const result = await axios.post('/tasks', { Name: name, isComplete: false });\n      return result.data; // מחזיר את המידע של המשימה שנוספה\n    } catch (error) {\n      alert(\"Failed to add task.\");\n      return null; // במקרה של שגיאה, מחזיר null או משתנה אחר להודעה\n    }\n  },\n\n  // עדכון סטטוס משימה\n  setCompleted: async (id, isComplete) => {\n    console.log('Updating task', { id, isComplete });\n    try {\n      const result = await axios.put(`/tasks/${id}`, { isComplete });\n      return result.data;\n    } catch (error) {\n      alert(\"Failed to update task.\");\n      return null;\n    }\n  },\n\n  // מחיקת משימה\n  deleteTask: async (id) => {\n    console.log('Deleting task:', id);\n    try {\n      const result = await axios.delete(`/tasks/${id}`);\n      return result.data;\n    } catch (error) {\n      alert(\"Failed to delete task.\");\n      return null;\n    }\n  }\n};\n\n\n// import axios from 'axios';\n\n// const apiClient = axios.create({\n//   baseURL: \"http://localhost:5144/tasks\",\n//   headers: {\n//     \"Content-Type\": \"application/json\"\n//   }\n// });\n\n// apiClient.interceptors.response.use(\n//   (response) => response,\n//   (error) => {\n//     console.error(\"API Error:\", error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// export default {\n//   getTasks: async () => {\n//     const result = await apiClient.get('/');\n//     return result.data;\n//   },\n\n//   addTask: async (name) => {\n//     const result = await apiClient.post(`/${name}`);\n//     return result.data;\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     const item = await apiClient.get(`/${id}`);\n//     item.data.isComplete = isComplete;\n//     const result = await apiClient.put(`/${id}`, item.data);\n//     return result.data;\n//   },\n\n//   deleteTask: async (id) => {\n//     const result = await apiClient.delete(`/${id}`);\n//     return result.data;\n//   }\n// };"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,SAAS,GAAGC,KAAK,CAACC,MAAM,CAAC;EAC7BC,OAAO,EAAE,6BAA6B;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAGF,OAAOH,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;EACb;EACAI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,QAAQ,CAAC;MACxC;MACA,OAAOC,KAAK,CAACC,OAAO,CAACH,MAAM,CAACI,IAAI,CAAC,GAAGJ,MAAM,CAACI,IAAI,GAAG,EAAE;IACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAC,KAAK,CAAC,uBAAuB,CAAC;MAC9B,OAAO,EAAE;IACX;EACF,CAAC;EAED;EACAC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;IACjC,IAAI;MACF,MAAMR,MAAM,GAAG,MAAML,KAAK,CAACgB,IAAI,CAAC,QAAQ,EAAE;QAAEC,IAAI,EAAEJ,IAAI;QAAEK,UAAU,EAAE;MAAM,CAAC,CAAC;MAC5E,OAAOb,MAAM,CAACI,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,KAAK,CAAC,qBAAqB,CAAC;MAC5B,OAAO,IAAI,CAAC,CAAC;IACf;EACF,CAAC;EAED;EACAQ,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEF,UAAU,KAAK;IACtCJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE;MAAEK,EAAE;MAAEF;IAAW,CAAC,CAAC;IAChD,IAAI;MACF,MAAMb,MAAM,GAAG,MAAML,KAAK,CAACqB,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAE;QAAEF;MAAW,CAAC,CAAC;MAC9D,OAAOb,MAAM,CAACI,IAAI;IACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,KAAK,CAAC,wBAAwB,CAAC;MAC/B,OAAO,IAAI;IACb;EACF,CAAC;EAED;EACAW,UAAU,EAAE,MAAOF,EAAE,IAAK;IACxBN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,EAAE,CAAC;IACjC,IAAI;MACF,MAAMf,MAAM,GAAG,MAAML,KAAK,CAACuB,MAAM,CAAC,UAAUH,EAAE,EAAE,CAAC;MACjD,OAAOf,MAAM,CAACI,IAAI;IACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,KAAK,CAAC,wBAAwB,CAAC;MAC/B,OAAO,IAAI;IACb;EACF;AACF,CAAC;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}