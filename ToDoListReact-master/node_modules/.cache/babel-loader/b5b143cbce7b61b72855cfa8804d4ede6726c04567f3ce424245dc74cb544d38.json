{"ast":null,"code":"// import axios from 'axios';\n\n// const apiUrl = \"https://localhost:5144\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     //TODO\n//     return {};\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async()=>{\n//     console.log('deleteTask')\n//   }\n// };\n//******************************** */\n\n// import axios from 'axios';\n\n// // הגדרת baseURL באמצעות משתנה סביבה, מתאים לסביבות פיתוח ו-production\n// axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'https://localhost:5144';\n\n// // הוספת Interceptor לתפיסת שגיאות ורישום ללוג\n// axios.interceptors.response.use(\n//   response => response, // מחזיר את התגובה כרגיל אם אין שגיאה\n//   error => {\n//     console.error('API Error:', {\n//       message: error.message,\n//       status: error.response?.status,\n//       data: error.response?.data\n//     });\n//     return Promise.reject(error); // מחזיר את השגיאה לצורך טיפול מאוחר יותר\n//   }\n// );\n\n// export default {\n//   // שליפת כל המשימות\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       // אם לא קיבלת תשובה ריקה, תחזיר את המידע\n//       return Array.isArray(result.data) ? result.data : [];\n//     } catch (error) {\n//       // ניתן להוסיף טיפול בשגיאות, לדוגמה להחזיר מערך ריק\n//       alert(\"Failed to load tasks.\");\n//       return [];\n//     }\n//   },\n\n//   // הוספת משימה חדשה\n//   addTask: async (name) => {\n//     console.log('Adding task:', name);\n//     try {\n//       const result = await axios.post('/tasks', { Name: name, isComplete: false });\n//       return result.data; // מחזיר את המידע של המשימה שנוספה\n//     } catch (error) {\n//       alert(\"Failed to add task.\");\n//       return null; // במקרה של שגיאה, מחזיר null או משתנה אחר להודעה\n//     }\n//   },\n\n//   // עדכון סטטוס משימה\n//   setCompleted: async (id, isComplete) => {\n//     console.log('Updating task', { id, isComplete });\n//     try {\n//       const result = await axios.put(`/tasks/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to update task.\");\n//       return null;\n//     }\n//   },\n\n//   // מחיקת משימה\n//   deleteTask: async (id) => {\n//     console.log('Deleting task:', id);\n//     try {\n//       const result = await axios.delete(`/tasks/${id}`);\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to delete task.\");\n//       return null;\n//     }\n//   }\n// };\nimport axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5215/ToDoList\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napiClient.interceptors.response.use(response => response, error => {\n  console.error(\"API Error:\", error.message);\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await apiClient.get('/');\n    return result.data;\n  },\n  addTask: async name => {\n    const result = await apiClient.post(`/${name}`);\n    return result.data;\n  },\n  setCompleted: async (id, isComplete) => {\n    const item = await apiClient.get(`/${id}`);\n    item.data.isComplete = isComplete;\n    const result = await apiClient.put(`/${id}`, item.data);\n    return result.data;\n  },\n  deleteTask: async id => {\n    const result = await apiClient.delete(`/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","interceptors","response","use","error","console","message","Promise","reject","getTasks","result","get","data","addTask","name","post","setCompleted","id","isComplete","item","put","deleteTask","delete"],"sources":["C:/מירי/תכנות/שנה ב/פרקטיקוד/ToDoListFullStack/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n\n// const apiUrl = \"https://localhost:5144\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     //TODO\n//     return {};\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async()=>{\n//     console.log('deleteTask')\n//   }\n// };\n//******************************** */\n\n// import axios from 'axios';\n\n// // הגדרת baseURL באמצעות משתנה סביבה, מתאים לסביבות פיתוח ו-production\n// axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'https://localhost:5144';\n\n// // הוספת Interceptor לתפיסת שגיאות ורישום ללוג\n// axios.interceptors.response.use(\n//   response => response, // מחזיר את התגובה כרגיל אם אין שגיאה\n//   error => {\n//     console.error('API Error:', {\n//       message: error.message,\n//       status: error.response?.status,\n//       data: error.response?.data\n//     });\n//     return Promise.reject(error); // מחזיר את השגיאה לצורך טיפול מאוחר יותר\n//   }\n// );\n\n// export default {\n//   // שליפת כל המשימות\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       // אם לא קיבלת תשובה ריקה, תחזיר את המידע\n//       return Array.isArray(result.data) ? result.data : [];\n//     } catch (error) {\n//       // ניתן להוסיף טיפול בשגיאות, לדוגמה להחזיר מערך ריק\n//       alert(\"Failed to load tasks.\");\n//       return [];\n//     }\n//   },\n\n//   // הוספת משימה חדשה\n//   addTask: async (name) => {\n//     console.log('Adding task:', name);\n//     try {\n//       const result = await axios.post('/tasks', { Name: name, isComplete: false });\n//       return result.data; // מחזיר את המידע של המשימה שנוספה\n//     } catch (error) {\n//       alert(\"Failed to add task.\");\n//       return null; // במקרה של שגיאה, מחזיר null או משתנה אחר להודעה\n//     }\n//   },\n\n//   // עדכון סטטוס משימה\n//   setCompleted: async (id, isComplete) => {\n//     console.log('Updating task', { id, isComplete });\n//     try {\n//       const result = await axios.put(`/tasks/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to update task.\");\n//       return null;\n//     }\n//   },\n\n//   // מחיקת משימה\n//   deleteTask: async (id) => {\n//     console.log('Deleting task:', id);\n//     try {\n//       const result = await axios.delete(`/tasks/${id}`);\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to delete task.\");\n//       return null;\n//     }\n//   }\n// };\nimport axios from 'axios';\n\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5215/ToDoList\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error(\"API Error:\", error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  getTasks: async () => {\n    const result = await apiClient.get('/');\n    return result.data;\n  },\n\n  addTask: async (name) => {\n    const result = await apiClient.post(`/${name}`);\n    return result.data;\n  },\n\n  setCompleted: async (id, isComplete) => {\n    const item = await apiClient.get(`/${id}`);\n    item.data.isComplete = isComplete;\n    const result = await apiClient.put(`/${id}`, item.data);\n    return result.data;\n  },\n\n  deleteTask: async (id) => {\n    const result = await apiClient.delete(`/${id}`);\n    return result.data;\n  }\n};"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,gCAAgC;EACzCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,SAAS,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACTC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACE,OAAO,CAAC;EAC1C,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAe;EACbK,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMb,SAAS,CAACc,GAAG,CAAC,GAAG,CAAC;IACvC,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvB,MAAMJ,MAAM,GAAG,MAAMb,SAAS,CAACkB,IAAI,CAAC,IAAID,IAAI,EAAE,CAAC;IAC/C,OAAOJ,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDI,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtC,MAAMC,IAAI,GAAG,MAAMtB,SAAS,CAACc,GAAG,CAAC,IAAIM,EAAE,EAAE,CAAC;IAC1CE,IAAI,CAACP,IAAI,CAACM,UAAU,GAAGA,UAAU;IACjC,MAAMR,MAAM,GAAG,MAAMb,SAAS,CAACuB,GAAG,CAAC,IAAIH,EAAE,EAAE,EAAEE,IAAI,CAACP,IAAI,CAAC;IACvD,OAAOF,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDS,UAAU,EAAE,MAAOJ,EAAE,IAAK;IACxB,MAAMP,MAAM,GAAG,MAAMb,SAAS,CAACyB,MAAM,CAAC,IAAIL,EAAE,EAAE,CAAC;IAC/C,OAAOP,MAAM,CAACE,IAAI;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}