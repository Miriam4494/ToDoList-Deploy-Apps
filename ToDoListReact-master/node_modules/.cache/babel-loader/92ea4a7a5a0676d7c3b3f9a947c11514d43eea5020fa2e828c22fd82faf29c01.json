{"ast":null,"code":"// import axios from 'axios';\n\n// const apiUrl = \"https://localhost:5144\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     //TODO\n//     return {};\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async()=>{\n//     console.log('deleteTask')\n//   }\n// };\n//********************* */\n\n// import axios from 'axios';\n\n// // הגדרת baseURL באמצעות משתנה סביבה, מתאים לסביבות פיתוח ו-production\n// axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'https://localhost:5144';\n\n// // הוספת Interceptor לתפיסת שגיאות ורישום ללוג\n// axios.interceptors.response.use(\n//   response => response, // מחזיר את התגובה כרגיל אם אין שגיאה\n//   error => {\n//     console.error('API Error:', {\n//       message: error.message,\n//       status: error.response?.status,\n//       data: error.response?.data\n//     });\n//     return Promise.reject(error); // מחזיר את השגיאה לצורך טיפול מאוחר יותר\n//   }\n// );\n\n// export default {\n//   // שליפת כל המשימות\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       // אם לא קיבלת תשובה ריקה, תחזיר את המידע\n//       return Array.isArray(result.data) ? result.data : [];\n//     } catch (error) {\n//       // ניתן להוסיף טיפול בשגיאות, לדוגמה להחזיר מערך ריק\n//       alert(\"Failed to load tasks.\");\n//       return [];\n//     }\n//   },\n\n//   // הוספת משימה חדשה\n//   addTask: async (name) => {\n//     console.log('Adding task:', name);\n//     try {\n//       const result = await axios.post('/tasks', { Name: name, isComplete: false });\n//       return result.data; // מחזיר את המידע של המשימה שנוספה\n//     } catch (error) {\n//       alert(\"Failed to add task.\");\n//       return null; // במקרה של שגיאה, מחזיר null או משתנה אחר להודעה\n//     }\n//   },\n\n//   // עדכון סטטוס משימה\n//   setCompleted: async (id, isComplete) => {\n//     console.log('Updating task', { id, isComplete });\n//     try {\n//       const result = await axios.put(`/tasks/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to update task.\");\n//       return null;\n//     }\n//   },\n\n//   // מחיקת משימה\n//   deleteTask: async (id) => {\n//     console.log('Deleting task:', id);\n//     try {\n//       const result = await axios.delete(`/tasks/${id}`);\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to delete task.\");\n//       return null;\n//     }\n//   }\n// };\nimport axios from 'axios';\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n// הוספת Interceptor לתפיסת שגיאות ורישום ללוג\naxios.interceptors.response.use(response => response,\n// מחזיר את התגובה כרגיל אם אין שגיאה\nerror => {\n  var _error$response, _error$response2;\n  console.error('API Error:', {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n  });\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get('/tasks');\n    if (Array.isArray(result.data)) return result.data;else {\n      alert(\"no tasks\");\n      return [];\n    }\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await axios.post('/tasks', {\n      Name: name,\n      isComplete: false\n    });\n    return result.data;\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    const result = await axios.put(`/tasks/${id}`, {\n      isComplete: isComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    console.log('deleteTask');\n    const result = await axios.delete(`/tasks/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","response","use","error","_error$response","_error$response2","console","message","status","data","Promise","reject","getTasks","result","get","Array","isArray","alert","addTask","name","log","post","Name","isComplete","setCompleted","id","put","deleteTask","delete"],"sources":["C:/מירי/תכנות/שנה ב/פרקטיקוד/ToDoListFullStack/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n\n// const apiUrl = \"https://localhost:5144\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     //TODO\n//     return {};\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async()=>{\n//     console.log('deleteTask')\n//   }\n// };\n//********************* */\n\n// import axios from 'axios';\n\n// // הגדרת baseURL באמצעות משתנה סביבה, מתאים לסביבות פיתוח ו-production\n// axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'https://localhost:5144';\n\n// // הוספת Interceptor לתפיסת שגיאות ורישום ללוג\n// axios.interceptors.response.use(\n//   response => response, // מחזיר את התגובה כרגיל אם אין שגיאה\n//   error => {\n//     console.error('API Error:', {\n//       message: error.message,\n//       status: error.response?.status,\n//       data: error.response?.data\n//     });\n//     return Promise.reject(error); // מחזיר את השגיאה לצורך טיפול מאוחר יותר\n//   }\n// );\n\n// export default {\n//   // שליפת כל המשימות\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       // אם לא קיבלת תשובה ריקה, תחזיר את המידע\n//       return Array.isArray(result.data) ? result.data : [];\n//     } catch (error) {\n//       // ניתן להוסיף טיפול בשגיאות, לדוגמה להחזיר מערך ריק\n//       alert(\"Failed to load tasks.\");\n//       return [];\n//     }\n//   },\n\n//   // הוספת משימה חדשה\n//   addTask: async (name) => {\n//     console.log('Adding task:', name);\n//     try {\n//       const result = await axios.post('/tasks', { Name: name, isComplete: false });\n//       return result.data; // מחזיר את המידע של המשימה שנוספה\n//     } catch (error) {\n//       alert(\"Failed to add task.\");\n//       return null; // במקרה של שגיאה, מחזיר null או משתנה אחר להודעה\n//     }\n//   },\n\n//   // עדכון סטטוס משימה\n//   setCompleted: async (id, isComplete) => {\n//     console.log('Updating task', { id, isComplete });\n//     try {\n//       const result = await axios.put(`/tasks/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to update task.\");\n//       return null;\n//     }\n//   },\n\n//   // מחיקת משימה\n//   deleteTask: async (id) => {\n//     console.log('Deleting task:', id);\n//     try {\n//       const result = await axios.delete(`/tasks/${id}`);\n//       return result.data;\n//     } catch (error) {\n//       alert(\"Failed to delete task.\");\n//       return null;\n//     }\n//   }\n// };\nimport axios from 'axios';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n// הוספת Interceptor לתפיסת שגיאות ורישום ללוג\naxios.interceptors.response.use(\n  response => response, // מחזיר את התגובה כרגיל אם אין שגיאה\n  error => {\n    console.error('API Error:', {\n      message: error.message,\n      status: error.response?.status,\n      data: error.response?.data\n    });\n    return Promise.reject(error); \n  }\n);\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get('/tasks');\n    if (Array.isArray(result.data))\n    return result.data\n    else {\n      alert(\"no tasks\");\n      return [];\n    }\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name);\n    const result = await axios.post('/tasks', { Name:name , isComplete:false });\n    return result.data;\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    const result = await axios.put(`/tasks/${id}`, { isComplete: isComplete} );\n    return result.data;\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask');\n    const result = await axios.delete(`/tasks/${id}`);\n    return result.data;\n  }\n};"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;;AAEtD;AACAL,KAAK,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAIA,QAAQ;AAAE;AACtBE,KAAK,IAAI;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACPC,OAAO,CAACH,KAAK,CAAC,YAAY,EAAE;IAC1BI,OAAO,EAAEJ,KAAK,CAACI,OAAO;IACtBC,MAAM,GAAAJ,eAAA,GAAED,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBI,MAAM;IAC9BC,IAAI,GAAAJ,gBAAA,GAAEF,KAAK,CAACF,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBI;EACxB,CAAC,CAAC;EACF,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAe;EACbS,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,QAAQ,CAAC;IACxC,IAAIC,KAAK,CAACC,OAAO,CAACH,MAAM,CAACJ,IAAI,CAAC,EAC9B,OAAOI,MAAM,CAACJ,IAAI,MACb;MACHQ,KAAK,CAAC,UAAU,CAAC;MACjB,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBb,OAAO,CAACc,GAAG,CAAC,SAAS,EAAED,IAAI,CAAC;IAC5B,MAAMN,MAAM,GAAG,MAAMnB,KAAK,CAAC2B,IAAI,CAAC,QAAQ,EAAE;MAAEC,IAAI,EAACH,IAAI;MAAGI,UAAU,EAAC;IAAM,CAAC,CAAC;IAC3E,OAAOV,MAAM,CAACJ,IAAI;EACpB,CAAC;EAEDe,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEF,UAAU,KAAK;IACtCjB,OAAO,CAACc,GAAG,CAAC,cAAc,EAAE;MAAEK,EAAE;MAAEF;IAAW,CAAC,CAAC;IAC/C,MAAMV,MAAM,GAAG,MAAMnB,KAAK,CAACgC,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAE;MAAEF,UAAU,EAAEA;IAAU,CAAE,CAAC;IAC1E,OAAOV,MAAM,CAACJ,IAAI;EACpB,CAAC;EAEDkB,UAAU,EAAE,MAAOF,EAAE,IAAK;IACxBnB,OAAO,CAACc,GAAG,CAAC,YAAY,CAAC;IACzB,MAAMP,MAAM,GAAG,MAAMnB,KAAK,CAACkC,MAAM,CAAC,UAAUH,EAAE,EAAE,CAAC;IACjD,OAAOZ,MAAM,CAACJ,IAAI;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}